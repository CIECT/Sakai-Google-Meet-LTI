# Tool configuration

## Maximum number of meetings to be displayed at once
meetings.max-count=200

# Keystore configuration for JWT
lti.jwk.password=store-pass
lti.jwk.location=config/jwk-keystore.jks

# Spring boot server configuration
server.port=8443

## TLS confiuration
server.ssl.key-store=config/tls-keystore.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=changeit

# Database configuration

## Example database configuration for mariadb
spring.datasource.username=opencollab-user
spring.datasource.password=opencollab-pass
spring.datasource.url=jdbc:mariadb://localhost:3306/opencollabdb
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

## For other databases:
## 1. Add database client to pom.xml
## 2. Adjust url and driver-class-name value
## Reference: https://docs.spring.io/spring-boot/docs/current/reference/html/data.html#data.sql.datasource.configuration

## Auto-ddl configuration
spring.jpa.hibernate.ddl-auto=update

# Google oauth2 configuration - for use with google meet
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
## Keep defaults
spring.security.oauth2.client.registration.google.scope=openid,https://www.googleapis.com/auth/meetings.space.created
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=/intercept/oauth2/code/google

# Sakai configuration

## Sakai client configuration
spring.security.oauth2.client.registration.sakai.client-id=
spring.security.oauth2.client.registration.sakai.client-secret=
### Keep defaults
spring.security.oauth2.client.registration.sakai.authorization-grant-type=implicit
spring.security.oauth2.client.registration.sakai.scope=openid
spring.security.oauth2.client.registration.sakai.redirect-uri={baseUrl}/lti/login

## Sakai client configuration
### LTI 1.3 Platform OAuth2 Well-Known/KeySet URL
spring.security.oauth2.client.provider.sakai.authorization-uri=http://localhost:8080/imsoidc/lti13/oidc_auth
### LTI 1.3 Platform OAuth2 Bearer Token Retrieval URL
spring.security.oauth2.client.provider.sakai.token-uri=http://localhost:8080/imsblis/lti13/token/1
### LTI 1.3 Platform OIDC Authentication URL
spring.security.oauth2.client.provider.sakai.jwk-set-uri=http://localhost:8080/imsblis/lti13/keyset
### Keep default
spring.security.oauth2.client.provider.sakai.user-name-attribute=sub

# Canvas configuration

## Canvas client configuration
# spring.security.oauth2.client.registration.canvas.client-id=
# spring.security.oauth2.client.registration.canvas.client-secret=
# spring.security.oauth2.client.registration.canvas.authorization-grant-type=implicit
# spring.security.oauth2.client.registration.canvas.scope=openid
# spring.security.oauth2.client.registration.canvas.redirect-uri={baseUrl}/lti/login

## Canvas provider configuration
# spring.security.oauth2.client.provider.canvas.authorization-uri=https://canvas.instructure.com/api/lti/authorize_redirect
# spring.security.oauth2.client.provider.canvas.token-uri=https://canvas.instructure.com/login/oauth2/token
# spring.security.oauth2.client.provider.canvas.jwk-set-uri=https://canvas.instructure.com/api/lti/security/jwks
# spring.security.oauth2.client.provider.canvas.user-name-attribute=sub

